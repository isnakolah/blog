@using Common.Domain.Entities
@using Common.Application.Articles.Queries.DTOs

<div class="sm:flex md:space-x-10">
    <div class="cursor-pointer md:flex-1 lg:w-96 lg:flex-none">
        <img src="@Article.FeaturedImageUri" alt="@Article.Title" class="rounded-lg max-w-full h-auto"/>
    </div>

    <div class="md:flex-1 flex flex-col justify-between md:justify-center pb-1 space-y-4">
        <div class="pt-4 md:pt-0">
            <CategoryAndDate Categories="@Article.Categories" Date="@Article.CreatedOn"/>
        </div>

        <div>
            <h3 class="md:transition md:duration-700 cursor-pointer md:hover:text-blue-700 text-2xl md:text-4xl font-black pb-4 leading-tight">
                <Link Url="@Endpoint" DisplayText="@Article.Title"/>
            </h3>

            <p class="text-gray-500 text-sm leading-relaxed">
                @Article.Excerpt
                <span class="text-sm text-blue-700"><Link Url="@Endpoint" DisplayText=" Read more..."/></span>
            </p>
        </div>

        <AuthorSummary
            ProfilePhotoUri="@Article.Author.ProfilePhotoUrl"
            ProfilePhotoAlt="@Article.Author.FullName"
            AuthorName="@Article.Author.FullName"
            AuthorOccupation="@Article.Author.OccupationName"/>

    </div>
</div>

@code {

    private Func<string> Endpoint = () => string.Empty;

    [Parameter, EditorRequired]
    public ArticleGetDTO Article { get; init; } = new();

    protected override void OnParametersSet()
    {
        Endpoint = () => $"articles/{Article.Slug}";
    }
}