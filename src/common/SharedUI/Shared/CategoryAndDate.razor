@using Common.Application.Categories.Queries.DTOs
@inject NavigationManager NavigationManager

<p class="text-sm flex flex-col-reverse space-y-3 md:flex-row md:space-y-0">
    @if (Categories is not null)
    {
        <span class="font-semibold text-gray-800 mt-1 md:mt-0">
            @foreach (var (category, index) in Categories.Select((value, i) => (value, i)))
            {
                <span class="flex-inline cursor-pointer text-gray-100 border border-solid border-green-300 p-2 mr-1 rounded-full bg-blue-400 md:flex-none md:rounded-none md:hover:text-blue-600 md:border-none md:p-0 md:bg-transparent md:mr-0 md:text-black" onclick="@(() => NavigateToCategory(category.Slug))">@category.Name</span>
                <span class="sm-hide md:pr-1">@(index != categoryTotalCount ? ", " : "")</span>
            }
            <span class="sm-hide px-1">@(date is not null ? "-" : "")</span>
        </span>
    }
    @if (date is not null)
    {
        <span class="text-gray-500 pb-2 ml-1 md:pb-0">@date</span>
    }
</p>

@code {

    private string? date;
    private int categoryTotalCount = 0;

    [Parameter]
    public IEnumerable<CategoryGetDTO>? Categories { get; init; }

    [Parameter]
    public DateTime Date { get; set; }

    protected override Task OnInitializedAsync()
    {
        categoryTotalCount = Categories?.Count() ?? 0;

        date = string.Join(", ", Date.ToLongDateString().Split(", ").Take(1..));

        return Task.CompletedTask;
    }

    private void NavigateToCategory(string categorySlug) => NavigationManager.NavigateTo($"categories/{categorySlug}");

}