@using Domain.Entities

<div class="flex flex-col space-y-3">
    <div class="flex-1 cursor-pointer">
        <a href="articles/@Article.Slug">
            <img src="@Article.FeaturedImageUri?.ToString()" alt="@Article.Title" class="rounded-lg max-w-full h-auto"/>
        </a>
    </div>

    <CategoryAndDate
        Categories="@categories"
        Date="@Article.CreatedOn"/>

    <h3 class="transition duration-700 cursor-pointer hover:text-blue-700 text-lg font-black leading-tight">
        <a href="articles/@Article.Slug">
            @Article.Title
        </a>
    </h3>

    <p class="text-gray-500 text-sm leading-relaxed">
        @Article.Excerpt
        <span class="text-sm text-blue-700 cursor-pointer">
            <a href="articles/@Article.Slug"> Read more...</a>
        </span>
    </p>

    <AuthorSummary
        ProfilePhotoUri="@Article.Author.Person.ProfilePhotoUri"
        ProfilePhotoAlt="@GetFullName"
        AuthorName="@GetFullName"
        AuthorOccupation="@Article.Author.Person.Occupation?.Name"/>
</div>

@code {
    private (string Name, string Slug)[]? categories;

    [Parameter, EditorRequired]
    public Article Article { get; init; } = default!;

    protected override void OnInitialized()
    {
        categories = Article.Categories.Select(x => (x.Name, x.Slug)).ToArray();
    }

    private string GetFullName => Article.Author.Person.FirstName + " " + Article.Author.Person.LastName;
}