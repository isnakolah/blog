@using Domain.Entities

<div class="flex space-x-10">
    <div class="flex-1 cursor-pointer">
        <a href="articles/@Article.Slug">
            <img src="@Article.FeaturedImageUri?.ToString()" alt="@Article.Title" class="rounded-lg max-w-full h-auto"/>
        </a>
    </div>

    <div class="flex-1 flex flex-col justify-between pb-1">
        <CategoryAndDate 
            Categories="@categories" 
            Date="@Article.CreatedOn"
        />

        <div>
            <h3 class="transition duration-700 cursor-pointer hover:text-blue-700 text-4xl font-black pb-4 leading-tight">
                <a href="articles/@Article.Slug">
                    @Article.Title
                </a>
            </h3>
            <p class="text-gray-500 text-sm leading-relaxed">
                @Article.Excerpt<span class="text-sm text-blue-700 cursor-pointer">
                    <a href="articles/@Article.Slug"> Read more...</a>
                </span>
            </p>
        </div>
        <AuthorSummary
            ProfilePhotoUri="@Article.Author.Person.ProfilePhotoUri"
            ProfilePhotoAlt="@GetFullName"
            AuthorName="@GetFullName"
            AuthorOccupation="@Article.Author.Person.Occupation?.Name"/>
    </div>
</div>


@code {

    private (string Name, string Slug)[]? categories;

    [Parameter, EditorRequired]
    public Article Article { get; init; } = default!;

    protected override void OnInitialized()
    {
        categories = Article.Categories.Select(x => (x.Name, x.Slug)).ToArray();
    }

    private string GetFullName => Article.Author.Person.FirstName + " " + Article.Author.Person.LastName;

}