@using Domain.Entities
@inject NavigationManager NavigationManager

<div class="flex flex-col space-y-3 border-b md:border-none border-gray-300 pb-3 pt-5 md:pt-0">
    <div class="h-48 xl:h-60">
        <div class="flex flex-col justify-between cursor-pointer rounded-lg p-3 bg-cover bg-no-repeat bg-center h-full" style="background-image: url('@Article.FeaturedImageUri?.ToString()')">
            <AuthorSummary
                ProfilePhotoUri="@Article.Author.Person.ProfilePhotoUri"
                ProfilePhotoAlt="@GetFullName"
                AuthorName="@GetFullName"
                AuthorOccupation="@Article.Author.Person.Occupation?.Name"/>
            
            <div class="pb-2 md:pb-0">
                <CategoryAndDate Categories="@categories" Date="@Article.CreatedOn"/>
            </div>
        </div>
    </div>

    <h3 class="md:transition md:duration-700 cursor-pointer md:hover:text-blue-700 text-lg font-black leading-tight" onclick="@NavigateToArticle">
        @Article.Title
    </h3>

    <p class="text-gray-500 text-sm leading-relaxed">
        @Article.Excerpt
        <span class="text-sm text-blue-700 cursor-pointer" onclick="@NavigateToArticle">
             Read more...
        </span>
    </p>

</div>

@code {

    private (string Name, string Slug)[]? categories;

    [Parameter, EditorRequired]
    public Article Article { get; init; } = default!;

    protected override void OnInitialized()
    {
        categories = Article.Categories.Select(x => (x.Name, x.Slug)).ToArray();
    }

    private string GetFullName => Article.Author.Person.FirstName + " " + Article.Author.Person.LastName;

    private void NavigateToArticle() => NavigationManager.NavigateTo($"articles/{Article.Slug}");

}